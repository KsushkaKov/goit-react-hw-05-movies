{"version":3,"file":"static/js/186.0515ab49.chunk.js","mappings":"kOAgDA,UA3CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CACA,IAAMQ,EAAY,mCAAG,8GAEIC,EAAAA,EAAAA,IAAgBT,GAFpB,OAEXU,EAFW,OAGjBN,EAAWM,GACXJ,EAAS,IAJQ,gDAMjBA,EAAS,wBANQ,yDAAH,qDASlBE,GAVoB,CAWrB,GAAE,CAACR,KAEJO,EAAAA,EAAAA,YAAU,WACHF,GACLM,EAAAA,GAAAA,MAAYN,EACb,GAAE,CAACA,KAGF,2BACuB,KAAb,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASS,UACR,sEAEF,wBACGT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EAKZ,QAIR,C,+LC5CKG,EAAU,4CAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,EAAAA,IAAA,6BAAgCD,IAD9B,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,QAAQR,KAAI,YACtB,MAAO,CACLC,GAFuC,EAAhBA,GAGvBQ,MAHuC,EAAZA,MAK9B,KAPwB,2CAAH,qDASXC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,sBACND,EADM,kBACWO,EADX,2BADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,QAAQR,KAAI,YACtB,MAAO,CACLC,GAFuC,EAAhBA,GAGvBQ,MAHuC,EAAZA,MAK9B,KATyB,2CAAH,sDAWZG,EAAe,mCAAG,WAAMzB,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,iBACXlB,GADW,OACDiB,EADC,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfM,EAAe,mCAAG,WAAM1B,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,mBACOiB,EADP,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,EAAKO,KAAKd,KAAI,YACnB,MAAO,CACLe,KAF4D,EAAxCA,KAGpBC,UAH4D,EAAlCA,UAI1BC,aAJ4D,EAAvBA,aAKrChB,GAL4D,EAATA,GAOtD,KAX4B,2CAAH,sDAafL,EAAe,mCAAG,WAAMT,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,mBACOiB,EADP,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,QAAQR,KAAI,YACtB,MAAO,CACLE,OAFiD,EAA1BA,OAGvBC,QAHiD,EAAlBA,QAI/BF,GAJiD,EAATA,GAM3C,KAV4B,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","servise/api/appi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'servise/api/appi';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviews = async () => {\n      try {\n        const review = await getMovieReviews(movieId);\n        setReviews(review);\n        setError('');\n      } catch (error) {\n        setError('Something went wrong');\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <div>\n      {reviews?.length === 0 && (\n        <p>We don't have any reviews for this movies</p>\n      )}\n      <ul>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=5cd5057c4af6e141ba56402bbaa2cf00';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day${API_KEY}`);\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\nexport const searchMovies = async inputQuery => {\n  const { data } = await axios.get(\n    `search/movie${API_KEY}&query=${inputQuery}&language=en-US&page=1`\n  );\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","getMovieReviews","review","toast","length","map","id","author","content","API_KEY","axios","getTrending","data","results","title","searchMovies","inputQuery","getMovieDetails","getMovieCredits","cast","name","character","profile_path"],"sourceRoot":""}