{"version":3,"file":"static/js/983.4aa9577b.chunk.js","mappings":"iLACA,EAA0B,2BAA1B,EAAiE,6BAAjE,EAA2G,8B,SCE9FA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,gBAAKC,UAAWC,EAAhB,UACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAA9B,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAML,UAAWC,EAA5C,SACGE,EAAMG,SAFFH,EAAME,GADA,OAUxB,C,0HCwBD,UAnCiB,WACf,OAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,EAAS,IADO,mBAGOK,EAAAA,EAAAA,MAHP,OAGRjB,EAHQ,OAIdY,EAAS,IACTF,EAAeV,GALD,gDAOdY,EAAS,wBAPK,yBASdE,GAAa,GATC,4EAAH,qDAYfE,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACHJ,GACLO,EAAAA,GAAAA,MAAYP,EACb,GAAE,CAACA,KAGF,4BACE,4CACCF,EAAYU,OAAS,IAAK,SAAC,IAAD,CAAWnB,OAAQS,IAC7CI,IAAa,SAAC,IAAD,MAGnB,C,+LCrCKO,EAAU,4CAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMJ,EAAW,mCAAG,sGACFI,EAAAA,EAAAA,IAAA,6BAAgCD,IAD9B,uBACjBE,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,QAAQpB,KAAI,YACtB,MAAO,CACLG,GAFuC,EAAhBA,GAGvBC,MAHuC,EAAZA,MAK9B,KAPwB,2CAAH,qDASXiB,EAAY,mCAAG,WAAMC,GAAN,yFACHJ,EAAAA,EAAAA,IAAA,sBACND,EADM,kBACWK,EADX,2BADG,uBAClBH,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,QAAQpB,KAAI,YACtB,MAAO,CACLG,GAFuC,EAAhBA,GAGvBC,MAHuC,EAAZA,MAK9B,KATyB,2CAAH,sDAWZmB,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,iBACXM,GADW,OACDP,EADC,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfM,EAAe,mCAAG,WAAMD,GAAN,yFACNN,EAAAA,EAAAA,IAAA,iBACXM,EADW,mBACOP,EADP,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAItBA,EAAKO,KAAK1B,KAAI,YACnB,MAAO,CACL2B,KAF4D,EAAxCA,KAGpBC,UAH4D,EAAlCA,UAI1BC,aAJ4D,EAAvBA,aAKrC1B,GAL4D,EAATA,GAOtD,KAX4B,2CAAH,sDAaf2B,EAAe,mCAAG,WAAMN,GAAN,yFACNN,EAAAA,EAAAA,IAAA,iBACXM,EADW,mBACOP,EADP,2BADM,uBACrBE,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,QAAQpB,KAAI,YACtB,MAAO,CACL+B,OAFiD,EAA1BA,OAGvBC,QAHiD,EAAlBA,QAI/B7B,GAJiD,EAATA,GAM3C,KAV4B,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/TrendList/TrendList.module.css?2aa8","components/TrendList/TrendList.jsx","pages/HomePage.jsx","servise/api/appi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TrendList_wrapper__1weW+\",\"movieList\":\"TrendList_movieList__zYZHD\",\"movieTitle\":\"TrendList_movieTitle__DS7YU\"};","import { Link } from 'react-router-dom';\nimport css from './TrendList.module.css';\n\nexport const TrendList = ({ movies }) => {\n  return (\n    <div className={css.wrapper}>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id} className={css.movieList}>\n            <Link to={`/movies/${movie.id}`} className={css.movieTitle}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { TrendList } from 'components/TrendList/TrendList';\nimport { getTrending } from 'servise/api/appi';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setError('');\n      try {\n        const movies = await getTrending();\n        setError('');\n        setTrendMovies(movies);\n      } catch (error) {\n        setError('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <div>\n      <h1>Trending movies</h1>\n      {trendMovies.length > 0 && <TrendList movies={trendMovies} />}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=5cd5057c4af6e141ba56402bbaa2cf00';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day${API_KEY}`);\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\nexport const searchMovies = async inputQuery => {\n  const { data } = await axios.get(\n    `search/movie${API_KEY}&query=${inputQuery}&language=en-US&page=1`\n  );\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["TrendList","movies","className","css","map","movie","to","id","title","useState","trendMovies","setTrendMovies","error","setError","isLoading","setIsLoading","useEffect","fetchData","getTrending","toast","length","API_KEY","axios","data","results","searchMovies","inputQuery","getMovieDetails","movieId","getMovieCredits","cast","name","character","profile_path","getMovieReviews","author","content"],"sourceRoot":""}