{"version":3,"file":"static/js/247.bb1b481b.chunk.js","mappings":"kOAkDA,UA7Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CACA,IAAMQ,EAAS,mCAAG,8GAEYC,EAAAA,EAAAA,IAAgBT,GAF5B,OAERU,EAFQ,OAGdN,EAAQM,GACRJ,EAAS,IAJK,gDAMdA,EAAS,wBANK,yDAAH,qDASfE,GAVoB,CAWrB,GAAE,CAACR,KAEJO,EAAAA,EAAAA,YAAU,WACHF,GACLM,EAAAA,GAAAA,MAAYN,EACb,GAAE,CAACA,KAGF,0BACE,wBACGF,EAAKS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChC,OACE,2BACE,gBACEC,MAAO,IACPC,IAAG,0DAAqDF,GACxDG,IAAKL,KAEP,uBAAIA,KACJ,uCAAeC,OAPRF,EAUZ,OAIR,C,+LC9CKO,EAAU,4CAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,EAAAA,IAAA,6BAAgCD,IAD9B,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,QAAQZ,KAAI,YACtB,MAAO,CACLC,GAFuC,EAAhBA,GAGvBY,MAHuC,EAAZA,MAK9B,KAPwB,2CAAH,qDASXC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,sBACND,EADM,kBACWO,EADX,2BADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,QAAQZ,KAAI,YACtB,MAAO,CACLC,GAFuC,EAAhBA,GAGvBY,MAHuC,EAAZA,MAK9B,KATyB,2CAAH,sDAWZG,EAAe,mCAAG,WAAM5B,GAAN,yFACNqB,EAAAA,EAAAA,IAAA,iBACXrB,GADW,OACDoB,EADC,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfd,EAAe,mCAAG,WAAMT,GAAN,yFACNqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,mBACOoB,EADP,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,EAAKpB,KAAKS,KAAI,YACnB,MAAO,CACLE,KAF4D,EAAxCA,KAGpBC,UAH4D,EAAlCA,UAI1BC,aAJ4D,EAAvBA,aAKrCH,GAL4D,EAATA,GAOtD,KAX4B,2CAAH,sDAafgB,EAAe,mCAAG,WAAM7B,GAAN,yFACNqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,mBACOoB,EADP,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,QAAQZ,KAAI,YACtB,MAAO,CACLkB,OAFiD,EAA1BA,OAGvBC,QAHiD,EAAlBA,QAI/BlB,GAJiD,EAATA,GAM3C,KAV4B,2CAAH,qD","sources":["components/Cast/Cast.jsx","servise/api/appi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'servise/api/appi';\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      try {\n        const castDetails = await getMovieCredits(movieId);\n        setCast(castDetails);\n        setError('');\n      } catch (error) {\n        setError('Something went wrong');\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <div>\n      <ul>\n        {cast.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id}>\n              <img\n                width={100}\n                src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${profile_path}`}\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=5cd5057c4af6e141ba56402bbaa2cf00';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day${API_KEY}`);\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\nexport const searchMovies = async inputQuery => {\n  const { data } = await axios.get(\n    `search/movie${API_KEY}&query=${inputQuery}&language=en-US&page=1`\n  );\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","useEffect","fetchCast","getMovieCredits","castDetails","toast","map","id","name","character","profile_path","width","src","alt","API_KEY","axios","getTrending","data","results","title","searchMovies","inputQuery","getMovieDetails","getMovieReviews","author","content"],"sourceRoot":""}